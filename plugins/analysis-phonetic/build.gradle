/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
apply plugin: 'elasticsearch.yaml-rest-test'

esplugin {
  description 'The Phonetic Analysis plugin integrates phonetic token filter analysis with elasticsearch.'
  classname 'org.elasticsearch.plugin.analysis.AnalysisPhoneticPlugin'
}

dependencies {
  api "org.apache.lucene:lucene-analyzers-phonetic:${versions.lucene}"
  api "commons-codec:commons-codec:${versions.commonscodec}"
}

restResources {
  restApi {
    include '_common', 'indices', 'index', 'search'
  }
}

tasks.named("dependencyLicenses").configure {
  mapping from: /lucene-.*/, to: 'lucene'
}

tasks.named('splitPackagesAudit').configure {
    // Lucene packages should be owned by Lucene!
  ignoreClasses 'org.elasticsearch.index.analysis.PhoneticTokenFilterFactory'
}

// 跳过测试
gradle.taskGraph.whenReady {
    tasks.each { task ->
        if (task.name.contains("test")) {
            task.enabled = false
        }

        if (task.name.contains("Test")) {
            task.enabled = false
        }

        if (task.name.contains("style")) {
            task.enabled = false
        }

        if (task.name.contains("composeUp")) {
            task.enabled = false
        }

    }
}
